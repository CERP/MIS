{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Dynamic =\n/** @class */\nfunction () {\n  function Dynamic() {}\n\n  Dynamic.put = function (input, path, value) {\n    var head = path[0],\n        tail = path.slice(1);\n\n    if (tail.length === 0) {\n      input[path[0]] = value;\n      return input;\n    }\n\n    var child = input[head] || {};\n    if (typeof child !== 'object') child = {};\n    input[head] = Dynamic.put(child, tail, value);\n    return input;\n  };\n\n  Dynamic.delete = function (input, path) {\n    var head = path[0],\n        tail = path.slice(1);\n\n    if (tail.length === 0) {\n      delete input[head];\n      return input;\n    }\n\n    var child = input[head];\n    if (child == null || typeof child !== 'object') return input;\n    input[head] = Dynamic.delete(child, tail);\n    return input;\n  };\n\n  Dynamic.get = function (input, path) {\n    var head = path[0],\n        tail = path.slice(1);\n    if (head == null) return input;\n    var child = input[head];\n    if (child == null) return undefined;\n    return Dynamic.get(child, tail);\n  };\n\n  Dynamic.get_values = function (input, path) {\n    return Object.values(Dynamic.get(input, path) || {});\n  };\n\n  Dynamic.get_keys = function (input, path) {\n    return Object.keys(Dynamic.get(input, path) || {});\n  };\n\n  Dynamic.get_pattern = function (input, path, left) {\n    if (left === void 0) {\n      left = [];\n    }\n\n    if (input == null) return [];\n    var head = path[0],\n        tail = path.slice(1);\n    if (head == null) return [{\n      path: left,\n      value: input\n    }];\n    var children = head === '+' ? Object.entries(input || {}) : [[head, input[head]]];\n    return children.filter(function (item) {\n      return item != null;\n    }).reduce(function (collect, _a) {\n      var key = _a[0],\n          child = _a[1];\n      return collect.concat(Dynamic.get_pattern(child, tail, left.concat([key])));\n    }, []);\n  };\n\n  Dynamic.flatten = function (input, path) {\n    if (path === void 0) {\n      path = new Array();\n    }\n\n    return Object.keys(input).reduce(function (collect, key) {\n      var value = input[key];\n      var next = path.concat([key]);\n\n      if (value instanceof Object && Array.isArray(value) === false) {\n        if (Object.keys(value).length > 0) return Dynamic.flatten(value, next).concat(collect);\n        return collect;\n      }\n\n      return [{\n        path: next,\n        value: value\n      }].concat(collect);\n    }, new Array());\n  };\n\n  Dynamic.layers = function (input, path) {\n    if (path === void 0) {\n      path = new Array();\n    }\n\n    switch (input instanceof Object) {\n      case false:\n        return [];\n\n      case true:\n        return Object.keys(input).reduce(function (collect, key) {\n          var value = input[key];\n          return collect.concat(Dynamic.layers(value, path.concat([key])));\n        }, [{\n          path: path,\n          value: input\n        }]);\n    }\n  };\n\n  return Dynamic;\n}();\n\nexports.default = Dynamic;","map":null,"metadata":{},"sourceType":"script"}